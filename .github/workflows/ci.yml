name: CI
on: push
jobs:
  pre-commit:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: Linux-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run pre-commit hooks
        run: npx lint-staged --no-stash --diff=origin/${{ github.event.repository.default_branch }}...origin/${{ github.ref_name }}
  test:
    needs: pre-commit
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-12, windows-2022]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set Playwright cache path
        shell: bash
        run: |
          if [ ${{ runner.os }} == Linux ]; then
            echo "PLAYWRIGHT_CACHE_PATH=~/.cache/ms-playwright" >> $GITHUB_ENV
          elif [ ${{ runner.os }} == macOS ]; then
            echo "PLAYWRIGHT_CACHE_PATH=~/Library/Caches/ms-playwright" >> $GITHUB_ENV
          elif [ ${{ runner.os }} == Windows ]; then
            echo "PLAYWRIGHT_CACHE_PATH=C:\Users\runneradmin\AppData\Local\ms-playwright" >> $GITHUB_ENV
          else
            echo "OS not found. Exiting." && exit 1
          fi
      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            ${{ env.PLAYWRIGHT_CACHE_PATH }}
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install Playwright browsers and browser deps
        if: steps.cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium chrome
      - name: Run e2e tests
        run: npm run test:headless
      - name: Upload report
        uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: playwright-report
          path: playwright-report
